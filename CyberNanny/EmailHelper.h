// Copyright (C) 2012 Angel Hernández Matos / Bonafide Ideas.
// You can redistribute this software and/or modify it under the terms of the 
// Microsoft Reciprocal License (Ms-RL).  This program is distributed in the hope 
// that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
// See License.txt for more details. 

/* C++ compiler      : Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 16.00.40219.01 for 80x86
   Creation date     : 14/04/2012
   Developer         : Angel Hernández Matos
   e-m@il            : angel@bonafideideas.com 
 					 : angeljesus14@hotmail.com
   Website           : http://www.bonafideideas.com
*/

#pragma once

#include "Account.h"
#include "Accounts.h"
#include "Application.h"
#include "MailItem.h"
#include "NameSpace.h"
#include "Attachments.h"
#include <Psapi.h>
#include <TlHelp32.h>
#include "Utils.h"

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>	Email helper. </summary>
///
/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

class EmailHelper {
private:
	/// <summary>	The application. </summary>
	App m_application;
	/// <summary>	The namespace. </summary>
	NameSpace m_namespace;
	/// <summary>	The disp. </summary>
	CComPtr<IDispatch> m_pDisp; 
	/// <summary>	The sender account. </summary>
	std::wstring m_senderAccount;
	/// <summary>	The outlook not found. </summary>
	bool m_isInitialized, m_outlookNotFound;

public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Default constructor. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	EmailHelper();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Destructor. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	~EmailHelper();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Constructor. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	///
	/// <param name="sender">	The sender. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	EmailHelper(std::wstring sender);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Compose and send. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	///
	/// <param name="target">	 	Target for the. </param>
	/// <param name="attachment">	The attachment. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void ComposeAndSend(std::wstring target, std::wstring attachment);

private:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Starts an outlook. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void StartOutlook();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Starts an and or kill outlook. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void StartAndOrKillOutlook();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Searches for the first and select account. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	///
	/// <returns>	The found and select account. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	Account FindAndSelectAccount();

protected:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Cleanups this object. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void Cleanup();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Initializes this object. </summary>
	///
	/// <remarks>	Angel.hernandez, 12/04/2012. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	virtual void Initialize();
};