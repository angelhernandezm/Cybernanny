// Copyright (C) 2012 Angel Hernández Matos / Bonafide Ideas.
// You can redistribute this software and/or modify it under the terms of the 
// Microsoft Reciprocal License (Ms-RL).  This program is distributed in the hope 
// that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
// See License.txt for more details. 

/* C++ compiler      : Microsoft (R) 32-bit C/C++ Optimizing Compiler Version 16.00.40219.01 for 80x86
   Creation date     : 14/04/2012
   Developer         : Angel Hernández Matos
   e-m@il            : angel@bonafideideas.com 
 					 : angeljesus14@hotmail.com
   Website           : http://www.bonafideideas.com
*/

// File generated by Wsutil Compiler version 1.0092 
// This file defines C/C++ functions, callbacks, types that correspond to operations,
// and types specified in WSDL and XSD files processed by WsUtil compiler. The generated 
// type definitions, function and callback declarations can be used with various 
// Web Services APIs either in applications that send and receive requests to and 
// from a running web service, or in the implementation of web services, or in both. 
//
// If Wsutil has generated this file from an XSD file, the file contains definition of 
// C/C++ structures types that correspond to types defined in the XSD file. 
// For example, if the following XSD complexType is defined in the XSD file
//
//      <xsd:complexType name="AddRequest">
//          <xsd:sequence>
//              <xsd:element minOccurs="0" name="a" type="xsd:int" />
//              <xsd:element minOccurs="0" name="b" type="xsd:int" />
//          </xsd:sequence>
//      </xsd:complexType>
// 
// this file contains the following definitions of the structure 
//      // AddRequest (xsd:complexType)
//      // <AddRequest xmlns='http://tempuri.org'>
//      // WS_STRUCT_DESCRIPTION* = &calculator_xsd.globalTypes.AddRequest
//      struct AddRequest
//      {
//          int a;
//          int b;
//      };
//
// For more information on how to use the C/C++ types generated in this file to read or write elements of XML documents that conform to 
// this XSD, please see the documentation for 
// WsReadType() and WsWriteType() functions.
// 
#if _MSC_VER > 1000 
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

// The following types were generated:

//     struct StringBuilder;
//     struct StringBuilder;

// The following header files must be included in this order before this one

// #include <WebServices.h>

////////////////////////////////////////////////
// C structure definitions for generated types
////////////////////////////////////////////////

// typeDescription: cybernanny3_xsd.globalTypes.StringBuilder
typedef struct StringBuilder 
{
    WS_XML_QNAME FactoryType;
    WS_XML_BUFFER* _any;
} StringBuilder;

////////////////////////////////////////////////
// Global web service descriptions.
////////////////////////////////////////////////

typedef struct _cybernanny3_xsd
{
    struct // globalTypes
    {
        // xml type: StringBuilder ("http://schemas.datacontract.org/2004/07/System.Text")
        // c type: StringBuilder
        // WS_TYPE: WS_STRUCT_TYPE
        // typeDescription: cybernanny3_xsd.globalTypes.StringBuilder
        WS_STRUCT_DESCRIPTION StringBuilder;
        
    } globalTypes;
    struct // globalElements
    {
        // xml element: StringBuilder ("http://schemas.datacontract.org/2004/07/System.Text")
        // c type: StringBuilder
        // elementDescription: cybernanny3_xsd.globalElements.StringBuilder
        WS_ELEMENT_DESCRIPTION StringBuilder;
        
    } globalElements;
} _cybernanny3_xsd;

extern const _cybernanny3_xsd cybernanny3_xsd;

#ifdef __cplusplus
}
#endif

